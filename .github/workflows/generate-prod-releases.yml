name: Build, Release, and Deploy dev builds

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d_%H%M')"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu

      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project_version

      - name: Update version in pom.xml
        run: |
          project_version=$(echo "${{ steps.project_version.outputs.version }}")
          date=$(echo "${{ steps.date.outputs.date }}")
          new_version="dev-${project_version}-${date}"
          mvn -B versions:set -DnewVersion="${new_version}"

      - name: Build with Maven
        id: mvn_build
        run: |
          mvn clean package
          # Additional steps as needed for packaging

      - name: Publish package
        run: |
          echo "Deploying Maven package..."
          mvn --batch-mode -DuseGitHubPackages=true deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: prod
          release_name: dev-${{ steps.project_version.outputs.version }}-${{ steps.date.outputs.date }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          # Other necessary upload parameters

      - name: Post JAR to Remote Endpoint
        env:
          API_TOKEN: ${{ secrets.DEV_BC_API_TOKEN }}
        run: |
          apitoken="${{ env.API_TOKEN }}"
          jar_file=${{ steps.mvn_build.outputs.jarfile }}
          filename=$(basename $jar_file)
          api_url="https://api.fabledrealms.net/builds/dev/upload?token=$apitoken"
          # Additional commands to post JAR to the remote API
